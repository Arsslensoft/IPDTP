<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AppModule.InterProcessComm</name>
    </assembly>
    <members>
        <member name="T:IPDTP.IPC.InterProcessIOException">
            <summary>
            
            </summary>
        </member>
        <member name="F:IPDTP.IPC.InterProcessIOException.IsServerAvailable">
            <summary>
            
            </summary>
        </member>
        <member name="F:IPDTP.IPC.InterProcessIOException.ErrorCode">
            <summary>
            
            </summary>
        </member>
        <member name="M:IPDTP.IPC.InterProcessIOException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:IPDTP.IPC.InterProcessIOException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:IPDTP.IPC.IChannelManager">
            <summary>
            Interface, which defines methods for a Channel Manager class.
            </summary>
            <remarks>
            A Channel Manager is responsible for creating and maintaining channels for inter-process communication. The opened channels are meant to be reusable for performance optimization. Each channel needs to procees requests by calling the <see cref="M:IPDTP.IPC.IChannelManager.HandleRequest(System.String)">HandleRequest</see> method of the Channel Manager.
            </remarks>
        </member>
        <member name="M:IPDTP.IPC.IChannelManager.Initialize">
            <summary>
            Initializes the Channel Manager.
            </summary>
        </member>
        <member name="M:IPDTP.IPC.IChannelManager.Stop">
            <summary>
            Closes all opened channels and stops the Channel Manager.
            </summary>
        </member>
        <member name="M:IPDTP.IPC.IChannelManager.HandleRequest(System.String)">
            <summary>
            Handles a request.
            </summary>
            <remarks>
            This method currently caters for text based requests. XML strings can be used in case complex request structures are needed.
            </remarks>
            <param name="request">The incoming request.</param>
            <returns>The resulting response.</returns>
        </member>
        <member name="M:IPDTP.IPC.IChannelManager.WakeUp">
            <summary>
            Forces the Channel Manager to exit a sleeping mode and create a new channel.
            </summary>
            <remarks>
            Normally the Channel Manager will create a number of reusable channels, which will handle the incoming reqiests, and go into a sleeping mode. However if the request load is high, the Channel Manager needs to be asked to create additional channels.
            </remarks>
        </member>
        <member name="M:IPDTP.IPC.IChannelManager.RemoveServerChannel(System.Object)">
            <summary>
            Removes an existing channel.
            </summary>
            <param name="param">A parameter identifying the channel.</param>
        </member>
        <member name="P:IPDTP.IPC.IChannelManager.Listen">
            <summary>
            Indicates whether the Channel Manager is in listening mode.
            </summary>
            <remarks>
            This property is left public so that other classes, like a server channel can start or stop listening based on the Channel Manager mode.
            </remarks>
        </member>
        <member name="T:IPDTP.IPC.IInterProcessConnection">
            <summary>
            
            </summary>
        </member>
        <member name="M:IPDTP.IPC.IInterProcessConnection.Connect">
            <summary>
            
            </summary>
        </member>
        <member name="M:IPDTP.IPC.IInterProcessConnection.Close">
            <summary>
            
            </summary>
        </member>
        <member name="M:IPDTP.IPC.IInterProcessConnection.Read">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:IPDTP.IPC.IInterProcessConnection.ReadBytes">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:IPDTP.IPC.IInterProcessConnection.Write(System.String)">
            <summary>
            
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:IPDTP.IPC.IInterProcessConnection.WriteBytes(System.Byte[])">
            <summary>
            
            </summary>
            <param name="bytes"></param>
        </member>
        <member name="M:IPDTP.IPC.IInterProcessConnection.GetState">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:IPDTP.IPC.IInterProcessConnection.NativeHandle">
            <summary>
            
            </summary>
        </member>
        <member name="T:IPDTP.IPC.InterProcessConnectionState">
            <summary>
            
            </summary>
        </member>
        <member name="F:IPDTP.IPC.InterProcessConnectionState.NotSet">
            <summary>
            
            </summary>
        </member>
        <member name="F:IPDTP.IPC.InterProcessConnectionState.Error">
            <summary>
            
            </summary>
        </member>
        <member name="F:IPDTP.IPC.InterProcessConnectionState.Creating">
            <summary>
            
            </summary>
        </member>
        <member name="F:IPDTP.IPC.InterProcessConnectionState.Created">
            <summary>
            
            </summary>
        </member>
        <member name="F:IPDTP.IPC.InterProcessConnectionState.WaitingForClient">
            <summary>
            
            </summary>
        </member>
        <member name="F:IPDTP.IPC.InterProcessConnectionState.ConnectedToClient">
            <summary>
            
            </summary>
        </member>
        <member name="F:IPDTP.IPC.InterProcessConnectionState.ConnectingToServer">
            <summary>
            
            </summary>
        </member>
        <member name="F:IPDTP.IPC.InterProcessConnectionState.ConnectedToServer">
            <summary>
            
            </summary>
        </member>
        <member name="F:IPDTP.IPC.InterProcessConnectionState.Reading">
            <summary>
            
            </summary>
        </member>
        <member name="F:IPDTP.IPC.InterProcessConnectionState.ReadData">
            <summary>
            
            </summary>
        </member>
        <member name="F:IPDTP.IPC.InterProcessConnectionState.Writing">
            <summary>
            
            </summary>
        </member>
        <member name="F:IPDTP.IPC.InterProcessConnectionState.WroteData">
            <summary>
            
            </summary>
        </member>
        <member name="F:IPDTP.IPC.InterProcessConnectionState.Flushing">
            <summary>
            
            </summary>
        </member>
        <member name="F:IPDTP.IPC.InterProcessConnectionState.FlushedData">
            <summary>
            
            </summary>
        </member>
        <member name="F:IPDTP.IPC.InterProcessConnectionState.Disconnecting">
            <summary>
            
            </summary>
        </member>
        <member name="F:IPDTP.IPC.InterProcessConnectionState.Disconnected">
            <summary>
            
            </summary>
        </member>
        <member name="F:IPDTP.IPC.InterProcessConnectionState.Closing">
            <summary>
            
            </summary>
        </member>
        <member name="F:IPDTP.IPC.InterProcessConnectionState.Closed">
            <summary>
            
            </summary>
        </member>
        <member name="T:IPDTP.IPC.IClientChannel">
            <summary>
            
            </summary>
        </member>
        <member name="M:IPDTP.IPC.IClientChannel.HandleRequest(System.String)">
            <summary>
            
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:IPDTP.IPC.IClientChannel.HandleRequest(System.IO.Stream)">
            <summary>
            
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:IPDTP.IPC.IClientChannel.HandleRequest(System.Object)">
            <summary>
            
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:IPDTP.IPC.IClientChannel.Create">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
